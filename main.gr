import Lexer from "./lexer"
import { readFile } from "./file"
import { hadError } from "./error"
import { argv } from "sys/process"
import { expect } from "result"
import { reverse, get } from "array"

let args = expect("Unable to get command line args", argv())
//use the last argument from the command line for simplicity
let args = reverse(args)
let f = get(0, args)

// print("hello world")
//can't get the file reading to work idk
match (readFile(f)) {
  Ok(s) => {
    print(Lexer.scanTokens(s))
  },
  Err(e) => {
    print(e)
  },
}

export let run = source => {
  let tokens = Lexer.scanTokens(source)
  //don't actually run any code if there was an error
  if (!hadError) {
    print(tokens)
  }
}

// export let runPrompt = () => {

// }

// run("{}().,[]
// [,].();
// >= < ==;
// <>
// +=*
// //this is a comment lol
// {

// }")
